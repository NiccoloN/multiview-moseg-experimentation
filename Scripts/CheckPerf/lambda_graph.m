% -------------------------------------------------------------------------
% Generation of lambda/alpha-dependent error graphs
% -------------------------------------------------------------------------
% This function reads the error matrix generated by error_analisys() and
% creates a 3D graph of the error values of the CoReg method as function of
% both alpha and lambda.
% Output: value of lambda resulting in the minimum error
% 
% If no sequences are specified, the resulting graph averages the values
% for all sequences, while if a range of n sequences is specified, the
% function generates n graphs, each one corresponding to one sequence
% In this case there won't be any output
% 
% The required parameters are:
% Error_matrix: the error matrix generated by error_analisys()
% alpha_range: array of values of alpha
% lambda_range: array of values of lambda
% seq_range (facultative): array composed of the indexes of the selected
%                           sequences.

function output = lambda_graph(varargin)
    
    Error_matrix = varargin{1};
    alpha_range = varargin{2};
    lambda_range = varargin{3};

    if nargin == 4
        all_seqs = false;
        seq_range = varargin{4};
        n_graphs = length(seq_range);
        Averaged_matrix = mean(Error_matrix, [1 6]);

    elseif nargin == 3
        all_seqs = true;
        seq_range = 1;
        Averaged_matrix = mean(Error_matrix, [1 3 6]);
        n_graphs = 1;

    else
        error('Invalid number of input arguments');
    end

    for graph_ind = 1:n_graphs
        figure
        hold on
        grid on
        Averaged_matrix_fixed = squeeze(Averaged_matrix(1, 5, seq_range(graph_ind), :, :, 1));
        surf(lambda_range, alpha_range, 100*Averaged_matrix_fixed);
        [min_value, min_index] = min(Averaged_matrix_fixed, [], "all");
        [min_alpha_index, min_lambda_index] = ind2sub(size(Averaged_matrix_fixed), min_index);
        plot3(lambda_range(min_lambda_index), alpha_range(min_alpha_index), 100*min_value, 'o', 'DisplayName', 'Minimum Value');
        xlabel('lambda')
        ylabel('alpha')   
        zlabel('error')
        zlim([0, 100*max(Averaged_matrix, [], 'all')])
        colormap("parula");
        view(3);

        if all_seqs == true
            title('Alpha-Lambda Performances for all sequences')
        else
            title(strcat('Alpha-Lambda Performances for seq. ', num2str(seq_range(graph_ind))))
        end
    end
    if all_seqs == true
        output = lambda_range(min_lambda_index);
    else
        output = [];
    end

end